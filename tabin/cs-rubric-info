#!/bin/sh
"exec" "`dirname $0`/../ta/venv/bin/python" "$0" "$@"

import json
import sys
import os
from typing import List
from custom_types import Rubric, RubricItem

if not len(sys.argv) == 2:
    print('Usage: cs111-rubric-info <path-to-rubric>')

if not os.path.exists(sys.argv[1]):
    raise OSError('%s does not exist' % sys.argv[1])

p = sys.argv[1]
with open(p) as f:
    rubric: Rubric = json.load(f)

print('This takes max of all points, so subtract max fudge points (if any)')
print('')

summary = {}
for key in rubric['rubric']:
    V: float = 0
    M: float = 0
    items: List[RubricItem] = rubric['rubric'][key]['rubric_items']
    for item in items:
        M += max(map(lambda opt: opt['point_val'], item['options']))
        if item['selected'] is not None:
            V += item['options'][item['selected']]['point_val']

    summary[key] = (V, M)
    print(f'{key}: {V} / {M}')

    for item in items:
        print(f'  {item["descr"]}')
        if item['selected'] is None:
            for opt in item['options']:
                print(f'    {opt["descr"]} ({opt["point_val"]})')
        else:
            sel = item['selected']
            opt = item['options'][sel]
            max_val = max(map(lambda opt: opt['point_val'], item['options']))
            print(f'    {opt["descr"]} ({opt["point_val"]}/{max_val})')

print('')
print('Summary:')
for key in summary:
    print(f"\t{key}: {summary[key][0]}/{summary[key][1]}")
