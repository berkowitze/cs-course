TA Filesystem readme

/course/cs0111/ta

    Terminology:
        - HTA+ : An HTA or the prof (for brevity)

        - student_id : at the moment, the student_id is their full Brown email
          address (as collected from a Google Form that requires login), stripped
          of the @brown.edu. Example: elias_berkowitz
          Note: Many students have email address, for example eli_berkowitz. If
          you are making a Gform and will use the email addresses recorded by that
          form, you can ensure you collect the student's full email address by
          requiring Brown account login to fill out the form.

        - regrading : regrading is open for TA's 7 days after emails are
          sent out; after that, only an HTA+ can do a regrade. (notimplemented)
          (TODO how are we actually doing regrades)

        - blocklist : I called everything blocklists before I realized it should
          be blacklist. they're equivalent.

        - TA access : None of this is configured since chgrp doesn't seem to work;
          ticket is open with problem.

        - venv : if a .py file has a "venv" description, that means a
          virtualenvironment must be used to run the script. There are a few
          virtual environments floating around right now: namely, /ta/grading/venv
          and /hta/handin/venv. TODO : clean it all up

  *.lock
      - You will likely see a bunch of .lock files floating around; these are
      generated by the grading app and ensure that two+ people do not edit the
      same file at the same time. They are harmless to remove when it's not a 
      grading session.

  /course/cs0111/ta
    - assignments.json: this json file contains a summary of the important
      information of each assignment (when it is released, when it's due,
      information for handin downloads, and grading information). This
      JSON is used by most of the scripts for both HTAs and TAs.
      TA Access: rwx

    - tas.txt: contains a list of \n-separated logins of TA's.
      TA Access: r-x

    - htas.txt: contains a list of \n-separated logins of HTA's.
      TA Access: r-x

    - t-s-blocklist.txt: stands for ta->student blocklist; each line
        is "{ta_name},{student_login}"
          example line: eberkowi, heila_precel
          means TA eberkowi has blacklisted student heila_precel
      TA Access: rwx (TODO : potentially change to -wx?)

    /testsuites
      - todo (including implementing testing infrastructure)

    /grading
      - passwd_hash.txt: contains the hashed (sha256) version of the
        password required to login to the grading app.
        TA Access: r-x

      - grading_app.py: running this file will start a webserver on the
        machine it's being run on. The address should be 127.0.0.1:6127
        Anyone who is logged into the machine can go to this address;
        anyone who knows the password to log into the website can grade
        for the course if they're on the machine.
        TA Access: r-x
        venv: /course/cs0111/ta/grading/venv/bin/python2.7

      - classes.py: this file has all object definitions for assignments,
        individual questions on assignments, and individual handins on
        those individual questions. It contains all the backend logic of the
        grading app.
        TA Access: r-x
        venv: /course/cs0111/ta/grading/venv/bin/python2.7

      - helpers.py: this file contains the functions required to lock files
        when grading to avoid simultaneous read/write.
        TA Access: r-x

      - check_rubric.py: this is a simple script used to check if a rubric is
        valid (right keys, values are correct types, etc).
        TODO : move this to bin
        TA Access: rwx
        venv: /course/cs0111/<TODO>

      /static : all the static files for the grading web server (CSS, JS, images)
        TA Access: r-x

      /templates : any templates for the webserver. Currently there's only
        an index and a login page (index.html, login.html)
        TA Access: r-x

      /data
        TODO : reorganize into data/<homework>/{blocklist.csv,rubrics,sfiles,logs,grades}
        /blocklists: contains one CSV for each assignment. When grading starts
          for an assignment, the ta -> student and student -> ta blocklists are
          aggregated and the student id's turned into their anonymous id for
          that assignment. the .csv's contain lines of the format
              {ta},{anonymous_id}
          regardless of whether the blocklist was ta -> student or student -> ta

        /grades:
          /<each assignment>
              /<each question>: contains one .json file for each student, which
                contains their personal rubric (based on ./grading/data/rubrics)
                Regrades DO NOT go here (TODO)

        /logs:
          /<each assignment>
            /<each question>: contains one .csv for each question, which contains
              a status for grading on that homework. The logs contain this
              information for each handin (one handin per line):
                {student_id_for_asgn},{grader_login},{status},{flagged},{flag-msg}
              - grader_login is '' if unextracted
              - status  is 1 if unextracted, 2 if extracted
              - flagged is 1 if unflagged,   2 if flagged
              - flag-msg is empty if unflagged, contains the reason for the
                handin being flagged otherwise

        /rubrics:
          /<each assignment>
            - q<qnumb>.json: qnumb (indexed from 1) is the question number
              this json file has the base rubric for the assignment, including
              rubric items and comments for each theme, and general comments
              it is copied whenever a new handin is extracted
            - bracket.json: this contains the grade splits for each theme on 
              the assignment. see /hta/grading/hta_helpers.py
              TODO : either a readme on how to write bracket.json or improve
              the way it's implemented (little confusing right now)

        /sfiles
          /<each assignment>
            /<each question>
              /<each student> (folder format: student-{anon-id})
                list of the latest files uploaded by the student

        TA Access: rwx (except for sfiles, which is r-x)

  /course/cs0111/.repos
    A directory in which to create git repos for the course

  /course/cs0111/materials
    A checkout of the materials.git repo from .repos.  This is where
    lecture notes and non-html policy documents will reside
