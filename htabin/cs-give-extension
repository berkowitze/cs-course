#!/bin/sh
"exec" "`dirname $0`/../ta/venv/bin/python" "$0" "$@" # run ta/venv python

import os
import json

from datetime import datetime
from config import CONFIG
from prompts import opt_prompt, date_prompt
from helpers import locked_file, green, json_edit
from course_customization import full_asgn_name_to_dirname

student_path = os.path.join(CONFIG.base_path, 'ta/groups/students.txt')
ext_path = os.path.join(CONFIG.base_path, 'hta/grading/extensions.json')
asgn_path = os.path.join(CONFIG.base_path, 'ta/assignments.json')

dt_fmt = "%m/%d/%Y %I:%M %p"

with locked_file(student_path) as f:
    student_set = {line.strip() for line in f}

students = list(student_set)

print(green('Give extension to:'))
login = students[opt_prompt(students, exit_on_ctrl_c=True) - 1]
print()

with locked_file(asgn_path) as f:
    asgn_data = json.load(f)

asgn_list = list(asgn_data['assignments'].keys())
print(green('Give extension for:'))
<<<<<<< HEAD
asgn = asgn_list[opt_prompt(asgn_data['assignments'].keys()) - 1]
=======
asgn = asgn_list[opt_prompt(asgn_data['assignments'].keys(),
                            exit_on_ctrl_c=True) - 1]
>>>>>>> d12f1635d497769772195d187fcd5ed3b7ce8c77
print()
deadline = datetime.strptime(asgn_data['assignments'][asgn]['due'],
                             '%m/%d/%Y %I:%M%p')

after_msg = f'Extension must be for after {asgn} deadline ({deadline})'
print(f'{asgn} is due {green(deadline.strftime(dt_fmt))}')
print(green('Give extension until:'))
ext_until = date_prompt(enforce_after=True,
                        after=deadline,
<<<<<<< HEAD
                        after_msg=after_msg)
=======
                        after_msg=after_msg,
                        exit_on_ctrl_c=True)
>>>>>>> d12f1635d497769772195d187fcd5ed3b7ce8c77
print()

mini_asgn = full_asgn_name_to_dirname(asgn)
with json_edit(ext_path) as data:
    ext = {
        'login': login,
        'asgn': mini_asgn,
        'until': ext_until.strftime("%m/%d/%Y-%I:%M%p")
    }
    data.append(ext)

print(f'{asgn} extension given to {login} until {ext_until.strftime(dt_fmt)}')

