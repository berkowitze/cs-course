{
  "Program Analysis": {
    "comments": [
      {
        "comment": "Nice job.", 
        "value": false
      }, 
      {
        "comment": "For program 2, you have separate copies of dracular and cress: the books each patron has checked out are the ones from the arrays, so there is only one copy of each.", 
        "value": false
      }, 
      {
        "comment": "For Program 2, you didn't include the Kathi objects in memory. I also don't quite agree with you on what the issue is for program 2: we can get either of the Kathi patrons by calling catalog[2].borrower, but we won't be able to figure out what other book that Patron checked out.", 
        "value": false
      }, 
      {
        "comment": "There are actually two Kathis! Patron() creates a new Kathi rather than using the same one.", 
        "value": false
      }, 
      {
        "comment": "You repeat a few location numbers. Also, neither of the loc 1007's should exist: the books are modified, so loc 1001 and 1003 are changed, rather than creating 1007. Also, there should be no empty patron: loc 1005 should not exist.", 
        "value": false
      }, 
      {
        "comment": "Lists should be their own location.", 
        "value": false
      }, 
      {
        "comment": "You have more or less the same issues for program 3: there shouldn't be empty patrons (loc 1005 and 1006), and there shouldn't be copies of the books (loc 1008 and 1010).", 
        "value": false
      }, 
      {
        "comment": "All good, except that for program 3 there should be two lists: catalogue and search.", 
        "value": false
      }, 
      {
        "comment": "For program 3 there should be two lists in memory: catalogue and search. Also, loc 1001 shouldn't have a list in it. Books don't keep a list of borrowers, since it doesn't make sense for more than 1 person to borrow a book.", 
        "value": false
      }, 
      {
        "comment": "Please submit .txt not .rtf files.", 
        "value": false
      }, 
      {
        "comment": "For program 2, you missed that the Patrons at loc 1006 and loc 1007 would have in their list the book they checked out.", 
        "value": false
      }, 
      {
        "comment": "Also, it looks like your submissions wasn't in the right format (maybe .rtf instead of .txt).", 
        "value": false
      }, 
      {
        "comment": "For program 1, Josh would have catalog[0] checked out as well.", 
        "value": false
      }, 
      {
        "comment": "For program 1, the books you filled it in with are right, but you were supposed to write ([catalog[0], catalog[1]) because you want to check whether those specific values were put into books_out. For example, if someone had changed the order of books in the catalog, then your check would fail. ", 
        "value": false
      }, 
      {
        "comment": "For program 2, at the end both Patron kathi's would still exist, one would have catalog[0] as its borrower and the other would have catalog[2] as its borrower. Also, the books in the catalog that Kathi checked out would have Kathi as their borrower.", 
        "value": false
      }, 
      {
        "comment": "For program 3, Julia would not have a separate copy of the Dracula book that was checked out to her. Also, the dracula book in the catalog would be checked out to nam.", 
        "value": false
      }, 
      {
        "comment": "For program 2, you didn't explain why you can't write a statement to get all the books Kathi has checked out.", 
        "value": false
      }
    ], 
    "rubric_items": [
      {
        "default": null, 
        "name": "Program 1: Filled in the correct answer", 
        "options": [
          "Correctly filled in the answer ([catalog[0], catalog[1]])", 
          "Did not correctly fill in, but attempted", 
          "Not attempted"
        ], 
        "point-val": [
          3, 
          1, 
          0
        ]
      }, 
      {
        "default": null, 
        "name": "Program 2: Memory location", 
        "options": [
          "The memory location dictionary is right (order agnostic)", 
          "Something is off with the memory location", 
          "It is very off, but attempted", 
          "Not attempted at all"
        ], 
        "point-val": [
          3, 
          2, 
          1, 
          0
        ]
      }, 
      {
        "default": null, 
        "name": "Program 2: Correctly explains why we can't do it", 
        "options": [
          "Correctly explains why we can't do it, or have a valid way of doing it (call over HTA in this case)", 
          "Has an answer but doesn't sufficiently justify it", 
          "Attempted, but very off", 
          "Not attempted at all"
        ], 
        "point-val": [
          4, 
          3, 
          1, 
          0
        ]
      }, 
      {
        "default": null, 
        "name": "Program 3: Memory location", 
        "options": [
          "The memory location dictionary is right (order agnostic)", 
          "Mostyl right, but they do not have a new list for search results", 
          "Something is off with the memory location", 
          "It is very off, but attempted", 
          "Not attempted at all"
        ], 
        "point-val": [
          5, 
          4, 
          3, 
          1, 
          0
        ]
      }, 
      {
        "default": null, 
        "name": "Program 3: Correctly explains why it is wrong", 
        "options": [
          "Correctly explains why it is wrong / not working", 
          "Has an answer but doesn't sufficiently justify it", 
          "Attempted, but very off", 
          "Not attempted at all"
        ], 
        "point-val": [
          3, 
          2, 
          1, 
          0
        ]
      }
    ]
  }, 
  "_COMMENTS": [
    {
      "comment": "Bravocado!", 
      "value": false
    }, 
    {
      "comment": "For the issue with Program 2, while it is a problem that there isn't a variable that references the Patron, we can still get a Patron via the Book that's checked out. The issue is that there are two Patrons.", 
      "value": false
    }
  ]
}